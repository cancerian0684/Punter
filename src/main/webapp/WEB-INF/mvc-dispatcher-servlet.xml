<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:**/database-${env:qa}.properties</value>
                <value>classpath*:**/${env:qa}.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <!--<import resource="DataSources.xml"/>-->
    <!--<import resource="Hibernate.xml"/>-->

    <context:annotation-config/>

    <context:component-scan base-package="org.shunya.server.component"/>

    <mvc:annotation-driven />

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="1000000000"/>
    </bean>

    <!-- freemarker config -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/ftl/"/>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
    </bean>

    <bean class="org.shunya.punter.gui.Main" init-method="init"></bean>

    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql:///punterdb?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;createDatabaseIfNotExist=true" />
        <property name="username" value="root" />
        <property name="password" value="password" />

        <!-- these are Tomcat database Pool properties -->
        <property name="initialSize" value="2" />
        <property name="maxActive" value="5" />
        <property name="maxIdle" value="3" />
        <property name="minIdle" value="2" />
        <property name="fairQueue" value="true" />
        <property name="testOnBorrow" value="true"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testOnReturn" value="false"/>
        <property name="validationInterval" value="30000"/>
        <property name="logAbandoned" value="true"/>
        <!--<property name="removeAbandoned" value="true"/>-->
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="current_session_context_class">org.hibernate.context.internal.ThreadLocalSessionContext</prop>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>-->
                <prop key="hibernate.show_sql">false</prop>
                <!--<prop key="hibernate.current_session_context_class">thread</prop>-->
                <prop key="hibernate.format_sql">true</prop>
                <!--<prop key="hibernate.connection.pool_size">3</prop>-->
                <!--<prop key="hibernate.connection.isolation">2</prop>-->
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <prop key="hibernate.order_updates">true</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <!--<prop key="hibernate.cache.use_structured_entries">true</prop>-->
                <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="javax.persistence.lock.timeout">3000</prop>
                <!--<prop key="hibernate.search.default.directory_provider">filesystem</prop>-->
                <!--<prop key="hibernate.search.default.indexBase">${lucene.indexBase}</prop>-->

                <!--<prop key="hibernate.c3p0.min_size">2</prop>-->
                <!--<prop key="hibernate.c3p0.max_size">5</prop>-->
                <!--<prop key="hibernate.c3p0.timeout">600</prop>-->
                <!--<prop key="hibernate.c3p0.max_statements">0</prop>-->
                <!--<prop key="hibernate.c3p0.idle_test_period">300</prop>-->
                <!--<prop key="hibernate.c3p0.acquire_increment">1</prop>-->
            </props>
        </property>
        <property name="packagesToScan" value="org.shunya.punter.jpa, org.shunya.kb.model"/>
    </bean>

<!--
    <jpa:repositories base-package="org.edifecs.web"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="defaultPersistenceUnit"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    -->
</beans>